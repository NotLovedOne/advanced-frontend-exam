{"ast":null,"code":"import axios from 'axios';\nconst apiKey = 'a4999a28333d1147dbac0d104526337a';\nconst url = 'https://api.themoviedb.org/3';\nconst nowPlayingUrl = `${url}/movie/now_playing`;\nconst topratedUrl = `${url}/movie/top_rated`;\nconst movieUrl = `${url}/movie`;\nconst genreUrl = `${url}/genre/movie/list`;\nconst moviesUrl = `${url}/discover/movie`;\nconst personUrl = `${url}/trending/person/week`;\nexport const fetchMovies = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(nowPlayingUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US',\n        page: 1\n      }\n    });\n    const posterUrl = 'https://image.tmdb.org/t/p/original/';\n    const modifiedData = data['results'].map(m => ({\n      id: m['id'],\n      backPoster: posterUrl + m['backdrop_path'],\n      popularity: m['popularith'],\n      title: m['title'],\n      poster: posterUrl + m['poster_path'],\n      overview: m['overview'],\n      rating: m['vote_average']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchGenre = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(genreUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US',\n        page: 1\n      }\n    });\n    const modifiedData = data['genres'].map(g => ({\n      id: g['id'],\n      name: g['name']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchMovieByGenre = async genre_id => {\n  try {\n    const {\n      data\n    } = await axios.get(moviesUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US',\n        page: 1,\n        with_genres: genre_id\n      }\n    });\n    const posterUrl = 'https://image.tmdb.org/t/p/original/';\n    const modifiedData = data['results'].map(m => ({\n      id: m['id'],\n      backPoster: posterUrl + m['backdrop_path'],\n      popularity: m['popularith'],\n      title: m['title'],\n      poster: posterUrl + m['poster_path'],\n      overview: m['overview'],\n      rating: m['vote_average']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchPersons = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(personUrl, {\n      params: {\n        api_key: apiKey\n      }\n    });\n    const modifiedData = data['results'].map(p => ({\n      id: p['id'],\n      popularity: p['popularity'],\n      name: p['name'],\n      profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\n      known: p['known_for_department']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchTopratedMovie = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(topratedUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US',\n        page: 1\n      }\n    });\n    const posterUrl = 'https://image.tmdb.org/t/p/original/';\n    const modifiedData = data['results'].map(m => ({\n      id: m['id'],\n      backPoster: posterUrl + m['backdrop_path'],\n      popularity: m['popularith'],\n      title: m['title'],\n      poster: posterUrl + m['poster_path'],\n      overview: m['overview'],\n      rating: m['vote_average']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchMovieDetail = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`${movieUrl}/${id}`, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US'\n      }\n    });\n    return data;\n  } catch (error) {}\n};\nexport const fetchMovieVideos = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`${movieUrl}/${id}/videos`, {\n      params: {\n        api_key: apiKey\n      }\n    });\n    return data['results'][0];\n  } catch (error) {}\n};\nexport const fetchCasts = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`${movieUrl}/${id}/credits`, {\n      params: {\n        api_key: apiKey\n      }\n    });\n    const modifiedData = data['cast'].map(c => ({\n      id: c['cast_id'],\n      character: c['character'],\n      name: c['name'],\n      img: 'https://image.tmdb.org/t/p/w200' + c['profile_path']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchSimilarMovie = async id => {\n  try {\n    const {\n      data\n    } = await axios.get(`${movieUrl}/${id}/similar`, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US'\n      }\n    });\n    const posterUrl = 'https://image.tmdb.org/t/p/original/';\n    const modifiedData = data['results'].map(m => ({\n      id: m['id'],\n      backPoster: posterUrl + m['backdrop_path'],\n      popularity: m['popularith'],\n      title: m['title'],\n      poster: posterUrl + m['poster_path'],\n      overview: m['overview'],\n      rating: m['vote_average']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};","map":{"version":3,"names":["axios","apiKey","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","personUrl","fetchMovies","data","get","params","api_key","language","page","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","error","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchPersons","p","profileImg","known","fetchTopratedMovie","fetchMovieDetail","fetchMovieVideos","fetchCasts","c","character","img","fetchSimilarMovie"],"sources":["C:/Users/mozest/Desktop/projects/react-movie/src/service/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiKey = 'a4999a28333d1147dbac0d104526337a';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topratedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl = `${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/discover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\n\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchGenre = async () => {\r\n    try {\r\n        const { data } = await axios.get(genreUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const modifiedData = data['genres'].map((g) => ({\r\n            id: g['id'],\r\n            name: g['name']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try {\r\n        const { data } = await axios.get(moviesUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1,\r\n                with_genres: genre_id\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchPersons = async () => {\r\n    try {\r\n        const { data } = await axios.get(personUrl, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((p) => ({\r\n            id: p['id'],\r\n            popularity: p['popularity'],\r\n            name: p['name'],\r\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\r\n            known: p['known_for_department']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchTopratedMovie = async () => {\r\n    try {\r\n        const { data } = await axios.get(topratedUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieDetail = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchMovieVideos = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/videos`, {\r\n            params: {\r\n                api_key: apiKey,\r\n            }\r\n        });\r\n        return data['results'][0];\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchCasts = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/credits`, {\r\n            params: {\r\n                api_key: apiKey,\r\n            }\r\n        });\r\n        const modifiedData = data['cast'].map((c) => ({\r\n            id: c['cast_id'],\r\n            character: c['character'],\r\n            name: c['name'],\r\n            img: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchSimilarMovie = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/similar`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}