{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mozest\\\\Desktop\\\\projects\\\\react-movie\\\\src\\\\components\\\\SearchResults\\\\searchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchSearchResults } from \"../../service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchResults(_ref) {\n  _s();\n  let {\n    location\n  } = _ref;\n  const searchTerm = new URLSearchParams(location.search).get(\"q\");\n  const [searchResults, setSearchResults] = useState([]); // Initialize with an empty array\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const results = await fetchSearchResults(searchTerm);\n      setSearchResults(results);\n    };\n    fetchData();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Search Results for \\\"\", searchTerm, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 42\n        }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: movie.title\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"kOHW2sW0vG6natLQlSoo4BL0IQc=\");\n_c = SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","fetchSearchResults","jsxDEV","_jsxDEV","SearchResults","_ref","_s","location","searchTerm","URLSearchParams","search","get","searchResults","setSearchResults","fetchData","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","title","id","_c","$RefreshReg$"],"sources":["C:/Users/mozest/Desktop/projects/react-movie/src/components/SearchResults/searchResults.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchSearchResults } from \"../../service\";\r\n\r\nexport function SearchResults({ location }) {\r\n  const searchTerm = new URLSearchParams(location.search).get(\"q\");\r\n  const [searchResults, setSearchResults] = useState([]); // Initialize with an empty array\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const results = await fetchSearchResults(searchTerm);\r\n      setSearchResults(results);\r\n    };\r\n\r\n    fetchData();\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col\">\r\n          <h2>Search Results for \"{searchTerm}\"</h2>\r\n          {searchResults.length === 0 && <p>No results found.</p>}\r\n          {searchResults.length > 0 && (\r\n            <ul>\r\n              {searchResults.map((movie) => (\r\n                <li key={movie.id}>{movie.title}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxC,MAAMG,UAAU,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC;EAChE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG,MAAMd,kBAAkB,CAACO,UAAU,CAAC;MACpDK,gBAAgB,CAACE,OAAO,CAAC;IAC3B,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBd,OAAA;MAAKa,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBd,OAAA;QAAKa,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBd,OAAA;UAAAc,QAAA,GAAI,uBAAoB,EAACT,UAAU,EAAC,IAAC;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzCT,aAAa,CAACU,MAAM,KAAK,CAAC,iBAAInB,OAAA;UAAAc,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACtDT,aAAa,CAACU,MAAM,GAAG,CAAC,iBACvBnB,OAAA;UAAAc,QAAA,EACGL,aAAa,CAACW,GAAG,CAAEC,KAAK,iBACvBrB,OAAA;YAAAc,QAAA,EAAoBO,KAAK,CAACC;UAAK,GAAtBD,KAAK,CAACE,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmB,CACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CA9BeF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}